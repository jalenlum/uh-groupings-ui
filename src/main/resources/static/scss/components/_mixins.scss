@use "sass:map";
@use "sass:meta";
@use "../customs" as *;

@mixin gradient($text-color: #fff, $bg-color: #6fa9be, $top-gradient: #7db1c4, $btm-gradient: #5a9cb4) {
  color: $text-color;
  filter: progid:dximagetransform.microsoft.gradient(enabled=false);
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
  text-shadow: 0 1px 1px #444;
  background: -moz-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -webkit-gradient(top, $top-gradient, $btm-gradient);
  background: -webkit-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -o-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -ms-linear-gradient(top, $top-gradient, $btm-gradient);
  background: {
    repeat: repeat-x;
    color: $bg-color;
  }
}

@mixin btn-rmv($bg-color: #b05b54, $top-gradient: #b05b54, $btm-gradient: #af534b) {
  color: white;
  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
  background: -moz-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -webkit-gradient(top, $top-gradient, $btm-gradient);
  background: -webkit-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -o-linear-gradient(top, $top-gradient, $btm-gradient);
  background: -ms-linear-gradient(top, $top-gradient, $btm-gradient);
  background: {
    repeat: repeat-x;
    color: $bg-color;
  }
}

@mixin media-breakpoint($breakpoints) {
  $conditions: ();
  @each $breakpoint in $breakpoints {
    //If key exits in map
    $conditions: (
            #{meta.inspect(map.get($media-queries, $breakpoint))},
    );
  }

  @media #{$conditions} {
    @content;
  }
}

@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }
    // Output standard non-prefixed declaration
    #{$property}: $value;
  }
}
